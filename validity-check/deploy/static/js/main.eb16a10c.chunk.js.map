{"version":3,"sources":["components/HeaderTemplate.jsx","components/SpaceBlock.jsx","components/MapView.jsx","components/Scanner.jsx","components/LocationCords.jsx","pages/Home.jsx","serviceWorker.js","App.js","pages/About.jsx","index.js"],"names":["HeaderTemplate","react_default","a","createElement","lib","title","href","Link","to","colored","style","color","Component","SpaceBlock","MapView","shadow","width","height","dist","google","this","props","initialCenter","lat","sessionStorage","getItem","lng","zoom","onClick","onMapClicked","onMarkerClick","name","SpaceBlock_SpaceBlock","GoogleApiWrapper","apiKey","Scanner","require","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","delay","result","statusUrl","isPresent","details","displayMessage","dialogColor","handleScan","bind","assertThisInitialized","handleOpenDialog","handleCloseDialog","fetch","then","response","json","data","console","log","catch","error","setState","openDialog","res","_this2","URL","method","body","JSON","stringify","err","className","col","margin","react_qr_scanner_lib_default","onError","handleError","onScan","facingMode","rows","ispresent","code","numeric","tooltip","class","right","src","alt","border","components_MapView","open","type","LocationCords","long","isGeolocationAvailable","isGeolocationEnabled","coords","setItem","longitude","latitude","React","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Home","components_LocationCords","HeaderTemplate_HeaderTemplate","components_Scanner","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","About","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","document","getElementById","process","origin","addEventListener","concat","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eb16a10c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Header,HeaderRow,Drawer,Navigation,Button} from 'react-mdl'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n\nexport default class HeaderTemplate extends Component {\n  render() {\n    return (\n      <div>\n        <Header >\n            <HeaderRow title=\"SCM\" />\n            <Navigation>\n            <a href=\"/\"><Link to={'/'}><Button colored style={{color: '#fff'}}>Home</Button></Link></a>\n                  <a href=\"/about\"><Link to={'/about'}><Button colored style={{color: '#fff'}}>About</Button></Link></a>\n            </Navigation>\n        </Header>\n        <Drawer title=\"SCM\"/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\n/**\n * Empty space blocks \n */\nexport default class SpaceBlock extends Component {\n  render() {\n    return (\n      <div>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport {Card, CardActions,Button,CardMenu,IconButton} from 'react-mdl'\nimport SpaceBlock from './SpaceBlock'\n\n class MapView extends Component {\n  render() {\n    const style={\n      width: '100%',\n    height: '600px',\n   \n    }\n    return (\n      <div>\n        <Card shadow={0} style={{width: '100%',height:'400px'}}>\n        <Map \n          google={this.props.google}\n          style={style}\n          initialCenter={{\n            lat: sessionStorage.getItem(\"lat\"),\n            lng: sessionStorage.getItem(\"long\") \n          }}\n          zoom={10}\n          onClick={this.onMapClicked}\n            >\n            <Marker onClick={this.onMarkerClick} name={'location'} />\n        </Map>\n        </Card>\n        <SpaceBlock/>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: (\"\"),\n})(MapView)","import React, { Component } from 'react'\nimport QrReader from 'react-qr-scanner'\nimport { Card, CardText, CardActions, Grid, Cell, DataTable, TableHeader, Dialog, DialogActions, DialogContent, DialogTitle, Button } from 'react-mdl'\n\nimport './components.css';\nimport MapView from './MapView'\nvar host = require('../host.json');\n\n\n// IP info access tocken 7d336261dbe2f2\n\nclass Scanner extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      delay: 2000,\n      result: ' ',\n      statusUrl: 'https://cdn.dribbble.com/users/1221795/screenshots/5127790/main-gif-drrible.gif',\n      isPresent: false,\n      details: '',\n      displayMessage: \"Scan the QR code by placing the product QR code in front of the camera\",\n      dialogColor: 'gray'\n    }\n    // https://dribbble.com/shots/3576821-Scan-and-Climb\n    this.handleScan = this.handleScan.bind(this);\n    this.handleOpenDialog = this.handleOpenDialog.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://www.geoplugin.net/json.gp\")\n      .then(response => response.json())\n      .then(data => { console.log(data) })\n      .catch(error => console.error(error))\n  }\n  //Dialog -----\n  // set openDialog to false to disable \n  handleOpenDialog() {\n    this.setState({\n      openDialog: true\n    });\n  }\n\n  handleCloseDialog() {\n    this.setState({\n      openDialog: false\n    });\n  }\n  //------\n  //responser to @validity check\n\n  handleScan(res) {\n    this.setState({\n      result: res,\n    })\n\n    var data = { 'data': res }\n\n    var PATH_VALIDITY_CHECK = 'api/product/isvaild/'\n    //var URL = 'http://127.0.0.1:8000/'\n    var URL = 'https://smartchainrestapi.herokuapp.com/'\n    {/*\n      Check the length of string  like \"this.state.result.length === 20\"  \n      so that the unwanted strings  reaching server can be avoided\n    */}\n    if (this.state.result !== null) {\n\n      fetch(URL + PATH_VALIDITY_CHECK, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      }).then((data) => data.json())\n        .then((json) => {\n          console.log(\"json.isPresent\", json.isPresent);\n          console.log(json.details);\n          this.setState({\n            isPresent: json.isPresent,\n            details: json.details\n          })\n          if (json.details === 'ok this'|| json.isPresent===true) {\n            this.setState({\n              statusUrl: 'https://cdn.dribbble.com/users/900431/screenshots/2346622/green-check.gif',\n              displayMessage: 'The product is authenticated. It is a valid product and safe to use',\n              isPresent: json.isPresent,\n              dialogColor: 'green'\n            })\n            this.handleOpenDialog();\n          }\n          else if (json.isPresent === false && json.details === 'Spurious') {\n            this.setState({\n              statusUrl: 'https://cdn.dribbble.com/users/179979/screenshots/1747462/warning_skull.gif',\n              displayMessage: 'The product seems to be counterfeit it is adviced not to use this product',\n              isPresent: json.isPresent,\n              dialogColor: 'orange'\n            })\n            this.handleOpenDialog();\n          }\n          else {  // Default display GIF\n            this.setState({\n              statusUrl: 'https://cdn.dribbble.com/users/1221795/screenshots/5127790/main-gif-drrible.gif',\n              dialogColor: 'black',\n              displayMessage: \"Scan the QR code by placing the product QR code in front of the camera\"\n            })\n          }\n        })\n        .catch((err) => console.log(err))\n    }\n    else{\n      console.log('waiting')\n    }\n  }\n\n  handleError(err) {\n    console.error(err)\n  }\n\n  render() {\n    const previewStyle = {\n      height: 400,\n      width: 420,\n    }\n    return (\n      <div >\n        <div >\n          <Grid className=\"demo-grid-2\">\n            <Cell col={7}>\n              <Card shadow={0} style={{ width: '100%', height: '600px', margin: 'auto' }}>\n                <CardText className=\"\">\n                  {/**\n            <QrReader \n                delay={this.state.delay}\n                style={previewStyle}\n                onError={this.handleError}\n                onScan={this.handleScan}\n                facingMode=\"rear\"\n            />\n            */}\n                  <QrReader\n                    delay={this.state.delay}\n                    style={previewStyle}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    facingMode=\"rear\"\n                  />\n                  <DataTable\n                    shadow={0}\n                    rows={[{ ispresent: this.state.isPresent, code: this.state.result, details: this.state.details },]}\n                    className=\"data_table\"\n                  >\n                    <TableHeader numeric name=\"ispresent\" tooltip=\"QR Code value\">Is Valid</TableHeader>\n                    <TableHeader numeric name=\"code\" tooltip=\"QR Code value\">Code</TableHeader>\n                    <TableHeader numeric name=\"details\" tooltip=\"Details\">Details</TableHeader>\n                  </DataTable>\n                </CardText>\n              </Card>\n            </Cell>\n\n            {/* Remove this card content to add authentication details*/}\n            {/** \n      -----Only for Desktops devices----\n      -----Hide for mobile phones------\n      */}\n            <Cell col={5} >\n              <Card class=\"hide_block\" shadow={0} style={{ width: '100%', height: '900px', margin: 'auto', right: \"250px\" }}>\n                <CardText>\n                  <Card shadow={0} style={{ width: '100%', height: '584px', }}>\n                    <img src={this.state.statusUrl} style={{ height: \"300px\", }} alt=\"Status logo\" />\n                    <Card border class=\"mdl-card__supporting-text\" style={{ color: this.state.dialogColor }}>\n                      {this.state.displayMessage}\n                    </Card>\n                  </Card>\n                </CardText>\n              </Card>\n            </Cell>\n          </Grid>\n\n          {/** \n      -----Only for mobile devices----\n      */}\n          <Card class=\"hide_desktop_block\" shadow={0} style={{ width: '100%', height: '500px', margin: 'auto' }}>\n            <CardText>\n              <Card shadow={0} style={{ width: '100%', height: '500px', }}>\n                <img src={this.state.statusUrl} style={{ height: \"300px\", }} alt=\"Status logo\" />\n                <div border class=\"mdl-card__supporting-text\" style={{ color: this.state.dialogColor }}>\n                  {this.state.displayMessage}\n                </div>\n              </Card>\n            </CardText>\n          </Card>\n\n          Content\n    <br></br>\n          Long: {sessionStorage.getItem(\"long\")} &nbsp;\n    Lat: {sessionStorage.getItem(\"lat\")}\n          <MapView />\n        </div>\n        {/**\n    Dialog box \n    */}\n        <Dialog open={this.state.openDialog}>\n          <DialogTitle>Result</DialogTitle>\n          <DialogContent>\n            <p style={{ color: this.state.dialogColor }}>{this.state.displayMessage}</p>\n            <img src={this.state.statusUrl} alt=\"img not found\" style={{ width: \"100px\", height: \"100px\" }} />\n          </DialogContent>\n          <DialogActions>\n            <Button type='button' onClick={this.handleCloseDialog}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\nexport default Scanner;\n","import React from 'react';\nimport {geolocated} from 'react-geolocated';\n \nclass LocationCords extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      long:'',\n      lat:''\n    }\n  }\n\n  /**\n   * \n   * Access the location using sessionStorage.getItem(\"long\") \n   * and sessionStorage.getItem(\"lat\")\n   * \n   * This session has limited life i,e untill the browser window is closed \n   */\n  \n  render() {\n    return !this.props.isGeolocationAvailable\n      ? <div>Your browser does not support Geolocation</div>\n      : !this.props.isGeolocationEnabled\n        ? <div>Geolocation is not enabled</div>\n        : this.props.coords\n          ?<div>\n             {sessionStorage.setItem(\"long\",this.props.coords.longitude)}\n              { sessionStorage.setItem(\"lat\",this.props.coords.latitude)}\n          </div>\n          : <div>Getting the location data&hellip; </div>;\n  }\n}\n \nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(LocationCords);","import React, { Component } from 'react'\nimport Scanner from '../components/Scanner'\nimport HeaderTemplate from '../components/HeaderTemplate'\nimport LocationCords from '../components/LocationCords'\n\n\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <LocationCords/>\n        <HeaderTemplate/>\n        <Scanner/>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport HeaderTemplate from './components/HeaderTemplate'\nimport Home from './pages/Home'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <HeaderTemplate/>\n        <Home/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport HeaderTemplate from '../components/HeaderTemplate'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <HeaderTemplate/>\n        <div>\n          <h1>\n            About \n          </h1>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nReactDOM.render(\n<Router>\n    <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n    </Switch>\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}