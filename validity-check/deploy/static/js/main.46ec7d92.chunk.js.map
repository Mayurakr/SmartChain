{"version":3,"sources":["components/Scanner.jsx","components/HeaderTemplate.jsx","App.js","serviceWorker.js","index.js"],"names":["Scanner","require","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","delay","result","statusUrl","isPresent","details","displayMessage","dialogColor","handleScan","bind","assertThisInitialized","handleOpenDialog","handleCloseDialog","setState","openDialog","res","_this2","data","code","fetch","URL","method","body","JSON","stringify","then","json","console","log","catch","err","error","react_default","a","createElement","react_mdl_lib","className","col","shadow","style","width","height","margin","rows","ispresent","numeric","name","tooltip","class","right","src","alt","border","color","open","type","onClick","Component","HeaderTemplate","title","App","about","HeaderTemplate_HeaderTemplate","components_Scanner","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46ec7d92.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-scanner'\nimport {Card,CardText,CardActions,Grid,Cell,DataTable,TableHeader,Dialog,DialogActions,DialogContent,DialogTitle,Button} from 'react-mdl'\n\nimport './components.css';\n\nvar host=require('../host.json');\n \nclass Scanner extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      delay: 2000,\n      result: ' ',\n      statusUrl:'https://cdn.dribbble.com/users/1221795/screenshots/5127790/main-gif-drrible.gif',\n      isPresent:false,\n      details:'',\n      displayMessage:\"Scan the QR code by placing the product QR code in front of the camera\",\n      dialogColor:'gray'\n    }\n // https://dribbble.com/shots/3576821-Scan-and-Climb\n    this.handleScan = this.handleScan.bind(this);\n    this.handleOpenDialog = this.handleOpenDialog.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n  }\n\n  //Dialog -----\n  handleOpenDialog() {\n    this.setState({\n      openDialog: true\n    });\n  }\n\n  handleCloseDialog() {\n    this.setState({\n      openDialog: false\n    });\n  }\n  //------\n\n  //responser to @validity check\n\n  handleScan(res){\n    this.setState({\n      result: res,\n    })\n\n    var data= {'code':res }\n\n    var PATH_VALIDITY_CHECK='/api/manufacturer/isvaild'\n    var URL='https://192.168.1.2:5000'\n    {/*\n      Check the length of string  like \"this.state.result.length === 20\"  \n      so that the unwanted strings  reaching server can be avoided\n    */}\n    if((this.state.result)!==\" \"){\n\n      fetch(URL+PATH_VALIDITY_CHECK, {\n            method : 'POST',\n            body : JSON.stringify(data)\n          }).then((data) => data.json())\n              .then((json) => {\n                  console.log(\"json.isPresent\",json.isPresent);\n                  console.log(json.details);\n                  this.setState({\n                      isPresent:json.isPresent,\n                      details:json.details\n                  })\n                  if(json.details==='ok this'){\n                      this.setState({statusUrl:'https://cdn.dribbble.com/users/900431/screenshots/2346622/green-check.gif',\n                            displayMessage:'The product is authenticated. It is a valid product and safe to use',\n                            isPresent:json.isPresent,\n                            dialogColor:'green'\n                    })\n                    this.handleOpenDialog();\n                  }\n                  else if(json.isPresent===false && json.details==='Spurious'){\n                      this.setState({statusUrl:'https://cdn.dribbble.com/users/179979/screenshots/1747462/warning_skull.gif',\n                            displayMessage:'The product seems to be counterfeit it is adviced not to use this product',\n                            isPresent:json.isPresent,\n                            dialogColor:'orange'\n                    })  \n                    this.handleOpenDialog();\n                  }\n                  else{  // Default display GIF\n                      this.setState({statusUrl:'https://cdn.dribbble.com/users/1221795/screenshots/5127790/main-gif-drrible.gif',\n                            dialogColor:'black',\n                            displayMessage:\"Scan the QR code by placing the product QR code in front of the camera\"\n                    })\n                  }\n            })\n            .catch((err)=>console.log(err))\n        }\n  }\n\n\n  handleError(err){\n    console.error(err)\n  }\n\n  render(){\n    const previewStyle = {\n      height: 400,\n      width: 420,\n    }\n    return(\n      <div >\n<div >\n    <Grid className=\"demo-grid-2\">\n        <Cell col={7}>\n          <Card shadow={0} style={{width: '100%',height:'600px', margin: 'auto'}}>\n            <CardText className=\"\">\n            {/**\n            <QrReader \n                delay={this.state.delay}\n                style={previewStyle}\n                onError={this.handleError}\n                onScan={this.handleScan}\n                facingMode=\"rear\"\n            />\n            */}\n             \n            <DataTable\n              shadow={0}\n              rows={[{ispresent: this.state.isPresent, code: this.state.result, details: this.state.details},]}\n              className=\"data_table\"\n            >\n                <TableHeader numeric name=\"ispresent\" tooltip=\"QR Code value\">Is Valid</TableHeader>\n                <TableHeader numeric name=\"code\" tooltip=\"QR Code value\">Code</TableHeader>\n                <TableHeader numeric name=\"details\"  tooltip=\"Details\">Details</TableHeader>\n            </DataTable>\n            </CardText>\n          </Card>\n        </Cell>\n            \n      {/* Remove this card content to add authentication details*/}\n        {/** \n      -----Only for Desktops devices----\n      -----Hide for mobile phones------\n      */}\n        <Cell col={5} >\n        <Card class=\"hide_block\" shadow={0} style={{width: '100%',height:'900px', margin: 'auto', right:\"250px\"}}>\n            <CardText>\n                <Card shadow={0} style={{width: '100%',height:'584px', }}>\n                    <img src={this.state.statusUrl} style={{height:\"300px\",}} alt=\"Status logo\"/>\n                    <Card border class=\"mdl-card__supporting-text\" style={{color:this.state.dialogColor}}>\n                        {this.state.displayMessage}\n                    </Card>\n                </Card>\n            </CardText>\n          </Card>\n        </Cell>\n    </Grid>\n\n      {/** \n      -----Only for mobile devices----\n      */}\n    <Card class=\"hide_desktop_block\" shadow={0} style={{width: '100%',height:'500px', margin: 'auto'}}>\n            <CardText>\n                <Card shadow={0} style={{width: '100%',height:'500px', }}>\n                    <img src={this.state.statusUrl} style={{height:\"300px\",}} alt=\"Status logo\"/>\n                    <div border class=\"mdl-card__supporting-text\" style={{color:this.state.dialogColor}}>\n                        {this.state.displayMessage}\n                    </div>\n                </Card>\n            </CardText>\n      </Card>\n\n    Content\n   \n    </div>\n    {/**\n    Dialog box \n    */}\n    <Dialog open={this.state.openDialog}>\n          <DialogTitle>Result</DialogTitle>\n          <DialogContent>\n            <p style={{color:this.state.dialogColor}}>{this.state.displayMessage}</p>\n            <img src={this.state.statusUrl} alt=\"img not found\" style={{width:\"100px\", height:\"100px\"}}/>\n          </DialogContent>\n          <DialogActions>\n            <Button type='button' onClick={this.handleCloseDialog}>OK</Button>\n          </DialogActions>\n        </Dialog>\n        \n      </div>\n    )\n  }\n}\nexport default Scanner;\n","import React, { Component } from 'react'\nimport {Header,HeaderRow,Drawer} from 'react-mdl'\n\nexport default class HeaderTemplate extends Component {\n  render() {\n    return (\n      <div>\n        <Header >\n            <HeaderRow title=\"SCM\" />\n        </Header>\n        <Drawer title=\"SCM\"/ >\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Scanner from './components/Scanner';\nimport HeaderTemplate from './components/HeaderTemplate'\n\nimport './index.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      about:false\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <HeaderTemplate/>\n        <Scanner/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}